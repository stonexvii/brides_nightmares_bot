from datetime import timedelta

import config

BUTTONS_TEXT = {
    'personal': 'ü™™ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ',
    'explicit': 'üîû –ù–µ—Ü–µ–Ω–∑—É—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è',
    'ad': 'üí∏ –†–µ–∫–ª–∞–º–∞',
    'politics': 'üè¢ –ü–æ–ª–∏—Ç–∏–∫–∞',
    'religion': 'üïå –†–µ–ª–∏–≥–∏—è',
    'criminal_themes': 'üß® –ö—Ä–∏–º–∏–Ω–∞–ª',
    'other': '‚ùå –ü—Ä–æ—á–µ–µ',
    'post': '‚úÖ –ó–∞–ø–æ—Å—Ç–∏—Ç—å',
}


class Minutes:
    MINUTES = {
        0: '–º–∏–Ω—É—Ç',
        1: '–º–∏–Ω—É—Ç—É',
        2: '–º–∏–Ω—É—Ç—ã',
        3: '–º–∏–Ω—É—Ç—ã',
        4: '–º–∏–Ω—É—Ç—ã',
        5: '–º–∏–Ω—É—Ç',
        6: '–º–∏–Ω—É—Ç',
        7: '–º–∏–Ω—É—Ç',
        8: '–º–∏–Ω—É—Ç',
        9: '–º–∏–Ω—É—Ç',
    }

    @classmethod
    def as_str(cls, minutes: int):
        if minutes:
            if 5 <= minutes < 20:
                return f'{minutes} {cls.MINUTES[5]}'
            else:
                return f'{minutes} {cls.MINUTES[minutes % 10]}'
        return '–º–µ–Ω—å—à–µ –º–∏–Ω—É—Ç—ã'


class ModeratorText:
    SUCCESS = '–°–æ–æ–±—â–µ–Ω–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ!'
    FAILURE = '–û—Ç–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!'
    OTHER = '–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–∞–∑–∞'
    ANTI_SPAM = '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —á—Ç–æ–±—ã –º–æ–¥–µ—Ä–∞—Ç–æ—Ä –Ω–µ —Å–æ—à–µ–ª —Å —É–º–∞, —Å–æ–æ–±—â–µ–Ω–∏—è –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–µ —á–∞—â–µ –æ–¥–Ω–æ–≥–æ –∑–∞ ' + \
                str(config.ANTI_SPAM_MINUTES) + ' –º–∏–Ω—É—Ç\n–û—Å—Ç–∞–ª–æ—Å—å –∂–¥–∞—Ç—å {minutes}'

    @staticmethod
    def as_text(reason: str, message: str):
        return '–í –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ—Ç–∫–∞–∑–∞–Ω–æ\n' \
               f'–ü—Ä–∏—á–∏–Ω–∞: {BUTTONS_TEXT[reason] if reason in BUTTONS_TEXT else reason}\n\n' \
               f'{message[:4000]}\n\n' \
               '–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ /rules, –∑–∞—Ç–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ç–µ–∫—Å—Ç –∏ –ø—Ä–∏—à–ª–∏—Ç–µ –∑–∞–Ω–æ–≤–æ\n–°–ø–∞—Å–∏–±–æ!'

    @classmethod
    def elapsed_time(cls, e_time: timedelta):
        return cls.ANTI_SPAM.format(
            minutes=Minutes.as_str(config.ANTI_SPAM_MINUTES - int(e_time.total_seconds()) // 60),
        )
